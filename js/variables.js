var variables = {
    "rescaling:__choice__":"rescaling",
    "preprocessor:__choice__":"preprocessor",
    "preprocessor:kernel_pca:n_components":"kernel_pca:n_components",
    "preprocessor:pca:keep_variance":"pca:keep_variance",
    "preprocessor:polynomial:interaction_only":"polynomial:interaction_only",
    "preprocessor:polynomial:include_bias":"polynomial:include_bias",
    "preprocessor:pca:whiten":"pca:whiten",
    "preprocessor:select_percentile_classification:score_func":"select_percentile_classification:score_func",
    "preprocessor:kernel_pca:kernel":"kernel_pca:kernel",
    "preprocessor:kernel_pca:coef0":"kernel_pca:coef0",
    "preprocessor:kernel_pca:degree":"kernel_pca:degree",
    "preprocessor:kernel_pca:gamma":"kernel_pca:gamma",
    "preprocessor:select_percentile_classification:percentile":"select_percentile_classification:percentile",
    "preprocessor:polynomial:degree":"polynomial:degree",
    "balancing:strategy":"balancing:strategy",
    "classifier:__choice__":"classifier",
    "classifier:adaboost:n_estimators":"adaboost:n_estimators",
    "classifier:xgradient_boosting:colsample_bytree":"xgradient_boosting:colsample_bytree",
    "classifier:liblinear_svc:fit_intercept":"liblinear_svc:fit_intercept",
    "classifier:random_forest:min_samples_split":"random_forest:min_samples_split",
    "classifier:random_forest:max_depth":"random_forest:max_depth",
    "classifier:extra_trees:min_samples_split":"extra_trees:min_samples_split",
    "classifier:extra_trees:bootstrap":"extra_trees:bootstrap",
    "classifier:libsvm_svc:max_iter":"libsvm_svc:max_iter",
    "classifier:liblinear_svc:penalty":"liblinear_svc:penalty",
    "classifier:libsvm_svc:shrinking":"libsvm_svc:shrinking",
    "classifier:sgd:n_iter":"sgd:n_iter",
    "classifier:k_nearest_neighbors:weights":"k_nearest_neighbors:weights",
    "classifier:xgradient_boosting:colsample_bylevel":"xgradient_boosting:colsample_bylevel",
    "classifier:libsvm_svc:gamma":"libsvm_svc:gamma",
    "classifier:random_forest:min_weight_fraction_leaf":"random_forest:min_weight_fraction_leaf",
    "classifier:decision_tree:min_samples_leaf":"decision_tree:min_samples_leaf",
    "classifier:sgd:average":"sgd:average",
    "classifier:random_forest:criterion":"random_forest:criterion",
    "classifier:decision_tree:max_depth":"decision_tree:max_depth",
    "classifier:decision_tree:criterion":"decision_tree:criterion",
    "classifier:sgd:learning_rate":"sgd:learning_rate",
    "classifier:sgd:power_t":"sgd:power_t",
    "classifier:sgd:fit_intercept":"sgd:fit_intercept",
    "classifier:liblinear_svc:multi_class":"liblinear_svc:multi_class",
    "classifier:decision_tree:min_samples_split":"decision_tree:min_samples_split",
    "classifier:liblinear_svc:intercept_scaling":"liblinear_svc:intercept_scaling",
    "classifier:extra_trees:min_samples_leaf":"extra_trees:min_samples_leaf",
    "classifier:extra_trees:min_weight_fraction_leaf":"extra_trees:min_weight_fraction_leaf",
    "classifier:libsvm_svc:kernel":"libsvm_svc:kernel",
    "classifier:libsvm_svc:degree":"libsvm_svc:degree",
    "classifier:libsvm_svc:coef0":"libsvm_svc:coef0",
    "classifier:random_forest:max_features":"random_forest:max_features",
    "classifier:extra_trees:n_estimators":"extra_trees:n_estimators",
    "classifier:xgradient_boosting:max_delta_step":"xgradient_boosting:max_delta_step",
    "classifier:random_forest:min_samples_leaf":"random_forest:min_samples_leaf",
    "classifier:liblinear_svc:C":"liblinear_svc:C",
    "classifier:bernoulli_nb:fit_prior":"bernoulli_nb:fit_prior",
    "classifier:xgradient_boosting:learning_rate":"xgradient_boosting:learning_rate",
    "classifier:k_nearest_neighbors:n_neighbors":"k_nearest_neighbors:n_neighbors",
    "classifier:random_forest:bootstrap":"random_forest:bootstrap",
    "classifier:sgd:eta0":"sgd:eta0",
    "classifier:xgradient_boosting:max_depth":"xgradient_boosting:max_depth",
    "classifier:extra_trees:criterion":"extra_trees:criterion",
    "classifier:decision_tree:splitter":"decision_tree:splitter",
    "classifier:xgradient_boosting:subsample":"xgradient_boosting:subsample",
    "classifier:decision_tree:max_leaf_nodes":"decision_tree:max_leaf_nodes",
    "classifier:sgd:alpha":"sgd:alpha",
    "classifier:xgradient_boosting:reg_lambda":"xgradient_boosting:reg_lambda",
    "classifier:xgradient_boosting:reg_alpha":"xgradient_boosting:reg_alpha",
    "classifier:liblinear_svc:tol":"liblinear_svc:tol",
    "classifier:sgd:penalty":"sgd:penalty",
    "classifier:sgd:l1_ratio":"sgd:l1_ratio",
    "classifier:k_nearest_neighbors:p":"k_nearest_neighbors:p",
    "classifier:libsvm_svc:C":"libsvm_svc:C",
    "classifier:xgradient_boosting:base_score":"xgradient_boosting:base_score",
    "classifier:adaboost:learning_rate":"adaboost:learning_rate",
    "classifier:extra_trees:max_depth":"extra_trees:max_depth",
    "classifier:decision_tree:min_weight_fraction_leaf":"decision_tree:min_weight_fraction_leaf",
    "classifier:xgradient_boosting:scale_pos_weight":"xgradient_boosting:scale_pos_weight",
    "classifier:bernoulli_nb:alpha":"bernoulli_nb:alpha",
    "classifier:random_forest:max_leaf_nodes":"random_forest:max_leaf_nodes",
    "classifier:liblinear_svc:dual":"liblinear_svc:dual",
    "classifier:sgd:loss":"sgd:loss",
    "classifier:sgd:epsilon":"sgd:epsilon",
    "classifier:xgradient_boosting:min_child_weight":"xgradient_boosting:min_child_weight",
    "classifier:xgradient_boosting:n_estimators":"xgradient_boosting:n_estimators",
    "classifier:liblinear_svc:loss":"liblinear_svc:loss",
    "classifier:xgradient_boosting:gamma":"xgradient_boosting:gamma",
    "classifier:random_forest:n_estimators":"random_forest:n_estimators",
    "classifier:extra_trees:max_features":"extra_trees:max_features",
    "classifier:decision_tree:max_features":"decision_tree:max_features",
    "classifier:adaboost:algorithm":"adaboost:algorithm",
    "classifier:adaboost:max_depth":"adaboost:max_depth",
    "classifier:libsvm_svc:tol":"libsvm_svc:tol",
    "imputation:strategy":"imputation:strategy",
    "one_hot_encoding:use_mnimum_faction":"one_hot_encoding:use_mnimum_faction"
}


